{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","placeholder","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","message","setTimeout","aboutText","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c41bda05.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);  \r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                     <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> \r\n                    <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                    </li>         */}\r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </nav> \r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const[text, setText] = useState('');\r\n    //now the initial value is the text and to change the values use setText method.\r\n    //text = \"abfdfjas\"; WRONG WAY\r\n    //setText(\"abfdfjas\"); Correct Way\r\n\r\n    const handleUpClick= () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLowClick= () =>{\r\n        // console.log(\"Lowerrcase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange= (event) =>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleClear = () =>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n        \r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \")); \r\n        props.showAlert(\"Extra spaces removed!\", \"success\");   \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} placeholder='Enter text here' onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'black', color:props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className='btn btn-primary mx-2' onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className='btn btn-primary mx-2' onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy Text</button>\r\n            <button className='btn btn-primary mx-2' onClick={handleClear}>Clear Text</button>\r\n            <button className='btn btn-primary mx-2' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length-1} words and {text.length} characters.</p>\r\n            <p>You can read this in {text.split(\" \").length*(0.008)} minutes.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // let us know whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n      setAlert({\n        msg: message,\n        type:type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark mode has been set!\", \"success\");\n      // document.title = \"TextUtils - Dark Mode\";  //Can change the title of the document\n      // setInterval(()=>{                          //Help flashing the title.(not recommended)\n      //   document.title = 'TextUtils is best';\n      // }, 2000);\n      // setInterval(()=>{\n      //   document.title = 'Install TextUtils';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been set!\", \"success\");\n      // document.title = \"TextUtils - Light Mode\"; //Can change the title of the document\n    }\n  }\n\n  return (\n    <> \n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n      {/* /user --> Component 1 \n      /user/about --> Component 2 \n      So its a good idea to use the exacat path*/}\n    {/* <Route exact path=\"/about\">\n        <About />\n      </Route>\n      <Route excat path=\"/\"> */}\n        <TextForm heading=\"Enter a text to analyze\" mode={mode} showAlert={showAlert} /> \n      {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}